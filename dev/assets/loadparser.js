function asciiToBinary(str) {
    return atob(str)
}

function decode(encoded) {
    var binaryString =  asciiToBinary(encoded);
    var bytes = new Uint8Array(binaryString.length);
    for (var i = 0; i < binaryString.length; i++) {
        bytes[i] = binaryString.charCodeAt(i);
    }
    return bytes;
}

var encoded_levels = new Array();
class L0Builder {
    data = {};
    const = {};
    labels = {};
    statements = [];
    ECS = new ECS();

    handle(node) {
        if (["source_file", "declarations","statements"].includes(node.type)) { 
            for (var i = 0; i < node.childCount; i++){
                this.handle(node.child(i));
            }
        }

        else if (node.type === "comment") {
            return;
        }

        else if (["statement", "declaration"].includes(node.type)) { 
            this.handle(node.child(0));
        }

        else if (["expression", "memory_expression"].includes(node.type)) {
            switch (node.childCount) {
                case 1:
                    return new Expression(CONTENT_TYPES.EXPRESSION, this.handle(node.child(0)));
                case 2:
                    return new Expression(CONTENT_TYPES.UN_EXPRESSION, this.handle(node.child(1)), node.child(0).text);
                case 3:
                    var left_reader = this.handle(get_left_child(node));
                    var right_reader = this.handle(get_right_child(node));
                    if (left_reader.type === CONTENT_TYPES.MEMORY && right_reader.type === CONTENT_TYPES.MEMORY) {
                        this.assign(node, false, new Content(CONTENT_TYPES.REGISTER, '$x'), left_reader);
                        this.assign(node, false, new Content(CONTENT_TYPES.REGISTER, '$y'), right_reader);
                        left_reader = new Content(CONTENT_TYPES.REGISTER, '$x');
                        right_reader = new Content(CONTENT_TYPES.REGISTER, '$y');
                    } 
                    return new Expression(CONTENT_TYPES.BIN_EXPRESSION, left_reader, get_operator(node).text,  right_reader);
            }
        }

        else if (node.type === "number") {
            return new Content(CONTENT_TYPES.NUMBER, parseInt(node.text));
        }

        else if (node.type === "constant") {
            return new Content(CONTENT_TYPES.CONSTANT, node.text);
        }

        else if (node.type === "data") {
            return new Content(CONTENT_TYPES.DATA, node.text);
        }

        else if (["memory_reader" ,"reader", "writer"].includes(node.type)) {
            return this.handle(node.child(0));
        }

        else if (node.type === "register") {
            return new Content(CONTENT_TYPES.REGISTER, node.text);
        }

        else if (node.type === "memory") {
            return new Content(CONTENT_TYPES.MEMORY, this.handle(node.child(1)), get_datatype(node.child(3).text));
        }

        else if (node.type === "assignment") {
            var is_conditional = node.child(1).text === "?=" ? true : false;
            var writer = this.handle(node.child(0));
            var expression = this.handle(node.child(2));
            this.assign(node, is_conditional, writer, expression);
        }
        
        else if(node.type === "constant_declaration"){
            let id = node.child(1).text;
            let value = node.child(2).text;
            this.const[id] = value;
        }
        
        else if(node.type === "data_declaration"){
            let id = node.child(1).text;
            let value = node.child(2).text;
            this.data[id] = value;
        }
        
        else if(node.type === "label"){
            this.labels[node.text] = this.statements.length;
        }
        
        else if(node.type === "syscall"){
            this.push_statement(node, new ByteCode(OP.SYSCALL));
        }
    }

    assign(node, is_conditional, writer, expression) {
        this.push_statement(node, new ByteCode(get_opcode(expression), [is_conditional, writer].concat(convert_content_to_array(expression))));
    }

    push_statement(node, byte_code) {
        this.statements.push(byte_code);
        this.ECS.nodes.push(node);
    }
}
encoded_levels.push(decode(''));
class L1Builder extends L0Builder {
    handle(node) {
        if (node.type === "goto") {
            this.goto(node)
        } else {
            return super.handle(node);
        }
    }

    goto(node) {
        var reader = node.child(1);
        var reader1;
        if (reader.type === "label") {
            reader1 = new Content(CONTENT_TYPES.LABEL, reader.text);
        } else if (reader.type === "register") {
            reader1 = new Content(CONTENT_TYPES.REGISTER, reader.text);
        }
        var reader2 = new Content(CONTENT_TYPES.NUMBER, 1);
        var writer = new Content(CONTENT_TYPES.REGISTER, '$!');
        var expression = new Expression(CONTENT_TYPES.BIN_EXPRESSION, reader1, '-', reader2);
        this.assign(node, true, writer, expression);
    }
}
encoded_levels.push(decode(''));
class L2Builder extends L1Builder {
    handle(node) {
        if (node.type === "scope") { 
            this.start_scope();
            this.handle(node.child(1));
            this.end_scope();
        } 
        else if (node.type === "variable" && this.in_scope) {
            this.create_temp_var(node, node.child(0).text, node.child(2).text, node.child(4));
        }
        else if (node.type === "variable_name" && this.in_scope) {
            return this.read_temp_var(node.text);
        }
        else if (node.type === "variable") { 
            this.variable_declaration(node);
        } else if (node.type === "variable_name") {
            return new Content(CONTENT_TYPES.MEMORY, new Content(CONTENT_TYPES.DATA, '&_' + node.text), get_datatype(this.variables["&_" + node.text]));
        } else {
            return super.handle(node);
        }
    }

    create_temp_var(node, var_name, var_size, node_expression) {
        var variable_size = get_variable_bytesize(var_size);
        this.variable_pointer -= variable_size;
        this.head.variables[var_name] = [this.stack_pointer - this.variable_pointer, var_size];
        var expression = this.handle(node_expression);
        var writer = this.read_temp_var(var_name);
        this.assign(node, false, writer, expression);
    }

    read_temp_var(var_name) {
        var current = this.head;
        while (current != null) {
            if (var_name in current.variables) {
                return new Content(CONTENT_TYPES.MEMORY, new Expression(CONTENT_TYPES.BIN_EXPRESSION, new Content(CONTENT_TYPES.REGISTER, '$sp'), '-', new Content(CONTENT_TYPES.NUMBER,  current.variables[var_name][0])),  get_datatype(current.variables[var_name][1]));
            }   
            current = current.next;
        }
        // TODO: check if node.text is in variable dict otherwise return error
        return new Content(CONTENT_TYPES.MEMORY, new Content(CONTENT_TYPES.DATA, '&_' + var_name), get_datatype(this.variables["&_" + var_name]));
    }

    start_scope() {
        var frame = new StackFrame();
        frame.next = this.head;
        this.head = frame;
        this.in_scope = true;
        Stack.push(this.variable_pointer);
    }

    end_scope() {
        var offset = Stack.pop() - this.variable_pointer;
        this.head = this.head.next;
        this.variable_pointer += offset;
        if (this.variable_pointer === 112) {
            this.in_scope = false;
        }
    }

    variable_declaration(node) {
        var variable_name = node.child(0);
        var type = node.child(2);
        var expression = node.child(4);
        this.variables['&_' + variable_name.text] = type.text;
        var memory_allocation = "";
        for (var i = 0; i < get_variable_bytesize(type.text); i++) {
            memory_allocation += "0";
        }
        this.data['&_' + variable_name.text] = memory_allocation;
        var expression = this.handle(expression);
        this.assign(node, false, new Content(CONTENT_TYPES.MEMORY, new Content(CONTENT_TYPES.DATA, '&_' + variable_name.text), get_datatype(type.text)), expression);
    }

    variables = {}
    head = null
    stack_pointer = 112;
    variable_pointer = 112;
    in_scope = false;
}

class StackFrame {
    next;
    variables;
    constructor() {
        this.next= null;
        this.variables = {};
    }
}

const Stack = {
    items: [],

    push(element)
    {
        this.items.push(element);
    },

    pop()
    {
        if (this.items.length == 0)
            return "Underflow";
        return this.items.pop();
    }
}
encoded_levels.push(decode(''));
class L3Builder extends L2Builder {
    handle(node) {
        if (node.type === 'head_expression') {
            // If the assignment has multiple expressions
            if (this.has_sub_expression(node.child(0))) {
                var head_expression = this.handle(node.child(0));
                this.assign(node, false, new Content(CONTENT_TYPES.REGISTER, '$x'), head_expression);
                return new Expression(CONTENT_TYPES.EXPRESSION, new Content(CONTENT_TYPES.REGISTER, '$x'));
            }
            return this.handle(node.child(0));
        } else if (node.type === 'expression') {
            
            // if the expression does not contain any sub-expressions it should be sent down to L0 instead of being handled here.
            if (!this.has_sub_expression(node)) {
                return super.handle(node);
            }
            // The algo:

            // Start scope
            // recursively handle left side (by getting back into the block, which saves the result in $x)
            // Save $x in a temp var e.g. t0
            // recursively handle right side
            // push statement $x:= t0 + $x;
            // end scope

            // Only works when both children are expressions

            if (node.childCount === 7) {
                this.start_scope();
                var left_expression = this.handle(get_left_child(node));
                this.assign(node, false, new Content(CONTENT_TYPES.REGISTER, '$x'), left_expression);
                this.create_temp_var_with_content(node, 'u8', new Content(CONTENT_TYPES.REGISTER, '$x'));
                var right_expression = this.handle(get_right_child(node));
                this.assign(node, false, new Content(CONTENT_TYPES.REGISTER, '$x'), right_expression);
                var final_expression = new Expression(CONTENT_TYPES.BIN_EXPRESSION, this.read_temp_var(`${this.variable_pointer}`), get_operator(node).text, new Content(CONTENT_TYPES.REGISTER, '$x'));
                this.end_scope();
                return final_expression;
            }
        } else {
            return super.handle(node);
        }
    }

    create_temp_var_with_content(node, var_size, content_expression) {
        var variable_size = get_variable_bytesize(var_size);
        this.variable_pointer -= variable_size;
        this.head.variables[this.variable_pointer] = [this.stack_pointer - this.variable_pointer, var_size];
        var writer = this.read_temp_var(this.variable_pointer);
        this.assign(node, false, writer, content_expression);
    }

    has_sub_expression(expression) {
        for (var i = 0; i < expression.childCount; i++) {
            if (expression.child(i).type === 'expression') {
                return true;
            } 
        }
        return false;
    }
}
encoded_levels.push(decode(''));
for (var i = 0; i < encoded_levels.length; i++){
    var opt = document.createElement('option');
    opt.value = i;
    opt.innerHTML = "L"+i;
    document.getElementById('levels').appendChild(opt);
}
document.getElementById('levels').value = 3;

function get_builder(level) {
  switch (level) {
        case 0:
            return new L0Builder();
        case 1:
            return new L1Builder();
        case 2:
            return new L2Builder();
        case 3:
            return new L3Builder();
}
}